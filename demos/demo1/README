## How to build and run

To build the code samples, cd to the demo1-rawpointers directory and run "make" in a terminal. Then,
run "./zoo". Repeat for demo1-smartpointers. This can all be done in a terminal.

## Explanation

This demo contains two code samples showcasing the usage of smart pointers. Smart pointers automatically manage
dynamically-allocated memory for us, thereby helping prevent accidental memory leaks, but come with a few quirks
when working with them, which this demo will hopefully clarify.

The first code sample, demo1-rawpointers, provides a toy implementation of a zoo containing zookeepers and animals 
that demonstrates the usage of raw pointers and circular dependencies. The second sample, demo1-smartpointers, is a
similar implementation that replaces raw pointers with the three types of smart pointers: unique pointers, shared pointers,
and weak pointers.

We recommend first looking at main.cpp in demo1-rawpointers, and referencing the animal, zookeeper, and zoo implementations
whenever the comments say to do so. Then, do the same for demo1-smartpointers.

We hope the explanatory comments will help with understanding what is going on in the code, but if anything is unclear,
don't be afraid to shoot us a question!